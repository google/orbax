name: build
on:
  # continuous
  schedule:
    # Run every hour
    - cron: "0 * * * *"
  push:
    branches:
      - main
      - 'test_*'
  pull_request:
    branches:
      - main
permissions:
  contents: read
  actions: write  # to cancel previous workflows
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true
jobs:
  multiprocess-checkpoint-benchmarks:
    name: "multiprocess-checkpoint-benchmarks (Python ${{ matrix.python-version }}, jax=${{ matrix.jax-version }})"
    runs-on: linux-g2-16-l4-1gpu-x4
    container: us-docker.pkg.dev/ml-oss-artifacts-published/ml-public-container/ml-build:infrastructure-public-image-2d2a7b1e6e2e
    defaults:
      run:
        working-directory: checkpoint
    strategy:
      matrix:
        python-version: ["3.12"]
        jax-version: ["0.8.0"]
          # TODO(b/401258175) Re-enable once JAX nightlies are fixed.
          # - python-version: "3.13"
          #   jax-version: "nightly"
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5.3.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -e .
        pip install -e .[testing,gcs] -f https://storage.googleapis.com/jax-releases/libtpu_releases.html
        pip uninstall -y orbax
        if [[ "${{ matrix.jax-version }}" == "newest" ]]; then
          pip install -U jax[k8s,cuda12] jaxlib
        elif [[ "${{ matrix.jax-version }}" == "nightly" ]]; then
          pip install -U --pre jax[k8s,cuda12] jaxlib --extra-index-url https://us-python.pkg.dev/ml-oss-artifacts-published/jax-public-nightly-artifacts-registry/simple/
        else
          pip install "jax[k8s,cuda12]>=${{ matrix.jax-version }}" "jaxlib>=${{ matrix.jax-version }}"
        fi
        pip install gcsfs
        pip install portpicker
    - name: Run benchmarks
      env:
        GCS_BUCKET_PATH: gs://orbax-benchmarks/benchmark-results/${{ github.run_id }}
      run: |
        python3 -c "import jax; jax.distributed.initialize(); print(jax.devices());"
